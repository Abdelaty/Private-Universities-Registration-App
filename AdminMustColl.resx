<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>